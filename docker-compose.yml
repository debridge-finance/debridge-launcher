version: "3.6"
services:
  postgres:
    image: postgres
    container_name: postgres${DOCKER_ID}
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    networks:
      - debridge-node
  ipfs_daemon:
    image: ipfs/go-ipfs
    container_name: ipfs_daemon${DOCKER_ID}
    profiles: ["bootstrap"]
    command: daemon --writable --enable-pubsub-experiment --migrate=true --agent-version-suffix=docker
    restart: always
    volumes:
      - ./data/ipfs:/data/ipfs
    environment:
      - IPFS_PROFILE=server
    networks:
      - debridge-node
  bootstrap_ipfs_daemon:
    build: ./bootstrap-ipfs
    profiles: ["bootstrap"]
    container_name: bootstrap_ipfs_daemon${DOCKER_ID}
    depends_on:
      - ipfs_daemon
    environment:
      - IPFS_DAEMON_HOST=ipfs_daemon
      - IPFS_DAEMON_PORT=5001
    volumes:
      - ./bootstrap-ipfs/config:/home/node/config
    networks:
      - debridge-node
  debridge_node:
    image: debridgefinance/debridge-node:v1.0.0
    container_name: debridge_node${DOCKER_ID}
    restart: on-failure
    secrets:
      - source: keystore
        target: /home/node/keystore.json
    volumes:
      - ./config:/home/node/src/config
      - ./data/orbitdb:/home/node/orbitdb
    environment:
      - PORT=${DEBRIDGE_NODE_PORT}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_HOST=${POSTGRES_HOST}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_SCHEMA=${EI_DATABASE}
      - DATABASE_PORT=${POSTGRES_PORT}
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - API_BASE_URL=${API_BASE_URL}
      - API_LOGIN=${API_LOGIN}
      - API_PASSWORD=${API_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
    depends_on:
      - postgres
    networks:
      - debridge-node
networks:
  debridge:
    name: debridge-node
secrets:
  keystore:
    file: ./secrets/keystore.json
